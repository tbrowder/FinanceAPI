=begin pod

=begin comment
/v11/finance/quoteSummary/{symbol}

parameters
==========

name      description
---------------------
lang
string    en fr de it es zh
(query)

region
string    us au ca fr de hk it es gb in
(query)

modules * required
(query) financialData (and LOTS of other modules)

/v8/finance/spark

parameters
==========

name      description
---------------------
interval
string    1m 5m 15m 1d 1wk 1mo
(query)

range
string    1d 5d 1mo 3mo 6mo 1y 5y max
(query)

symbols   * required
string    Separated by commas
(query)   Max 10

=end comment

=head1 NAME

B<FinanceAPI> - Provides routines for querying securities information using 'https://Financeapi.net'

=head1 SYNOPSIS

=begin code :lang<raku>
use FinanceAPI;
...
=end code

=head1 DESCRIPTION

The company L<FinanceAPI|https://financeapi.net>
provides a set of APIs to extract financial data
from various markets around the world. 

This Raku package provides routines to query the website and manage the
received data.

The company has a free tier with a limit of 100 queries per day. The
user must obtain a personal API key in order to
successfully use the full capability of this module to
get desired data. See the details at 
L<https://financeapi.net>.

The API key obtained I<must> be assigned to the user's
environment variable C<FINANCEAPI_APIKEY>. On a Linux OS host,
one can do this in the user's C<$HOME/.bash_aliases> file:

=begin code
export FINANCEAPI_APIKEY='dEfvhygSrfbFttgyhjfe3huj'
=end code

Note tests in directory '/t' B<do not>  need an API key, but tests in 
directory '/xt' B<do>.

=head2 Local data location and use

Currently, data are utimately output to CSV tables, uniquely named
file per security C<symbol> (also known as C<ticker>) and content type.
(Note an SQLite database is a desirable possibility for the future, PRs welcome!).

=head3 General process

1. Create a hash of information on securities you wish to track. 
The hash must contain the following entries, but the user can add 
more if desisired.

=begin code
# keys are the security symbols (tickers)
my %portfolio = %(
    MRK => {
        type   => "security type",
        lots => {
            idl => {
                buy-date => "yyyy-mm-dd",
                buy-total-price => 420.25,
                number-shares   => 40.0,
                sell-date => "", 
                sell-total-price => "", 
            
            },
        },
    },
);
=end code

2. Process each query path and the resulting single files are placed
in a holding directory. Refer to those files as "query results."

3. Run the local process which takes each query result file in the holding directory
and appends its new data to the end of the appropriate CVS table file in the data
directory. The query result is then placed in the query file storage directory for
archiving. Those data can be deleted when the user is satisfied with the overall
state of the data collection. 

The file collections are
first searched for in the directory defined by environment variable
C<FINANCEAPI_DATA>. If that exists, it is used, otherwise,
the current directory is used and a subdirectory named C<financeapi_data>
is used (after creating it if it does not exist). 
Under the data directory are three subdirectories are named C<csv-tables>, C<query-json-files>, and C<archive>.

Existing data tables are
first read and checked to ensure only new data are appended.
The CSV table file naming format:

=begin code
{$data-directory}/{$symbol}-{$table-type}.csv
=end code

where:

C<$symbol> - the market symbol for the security, e.g., 'JAGIX', 'MRK'

C<$table-type> - the query type, e.g., 'daily', 'event'

=head3 CSV table formats

All tables are kept in date order from earliest to latest. For those tables
that may have multiple events on the same day, the second key is the event
type which are:

=item B<BU> - Buy
=item B<SE> - Sell
=item B<SP> - Split
=item B<DI> - Dividend
=item B<RC> - Return of capital
=item B<RS> - Reverse split
=item B<SO> - Split

Daily

=begin code
Date | Symbol | Close ($currency/share)
=end code

Event

=begin code
Date | Symbol | Event | Amount ($currency/share) | Notes
=end code

=head2 Current status

The following query paths and their routines are currently available.
Given the ticker symbol of a
security of interest, we can use it as a key to the hashes returned by each
query to output the data in any desired format.

=head3 Daily closing prices of securities

=item path

=head3 Dividend and split dates and amounts

=item path

Other query paths are defined on the L<FinanceAPI|https://financeapi.net> website, 
but they have not yet been handled. File an issue or, better yet,
submit a PR if you want others.

Their default values should give usable data for the past
six months. Their default values are set for the author's
convenience for testing the free tier:

C<EN> language
C<US> region

=head1 AUTHOR

Tom Browder <tbrowder@acm.org>

=head1 COPYRIGHT AND LICENSE

Â© 2025 Tom Browder

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod
