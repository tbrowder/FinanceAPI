#!/usr/bin/env raku

use FinanceAPI;
use JSON::Fast <pretty sorted-keys>;
use JSON::Path;

my $apif = "api/yh-finance-api-specification.json";
my $debug = 0;
if not @*ARGS {
    print qq:to/HERE/;
    Usage: {$*PROGRAM.basename} <mode> <args...> [debug]

    With <mode> and <args...>, queries the FinanceAPI for
    results to be processed.

    Modes:

    Options:

    HERE
    exit;
}

for @*ARGS {
    my $jstr = from-json($apif.IO.slurp);
    my %h = from-json($apif.IO.slurp);
    for %h.kv -> $k, $v {
        if $k eq "paths" {
            say "    key $k";
            if $v ~~ Hash {
                my %h2 = %($v);
                for %h2.kv -> $k, $v {
                    say "    key $k";
                    say "      value '$v";
                }
            }
            elsif $v ~~ List {
                my @lines = @($v);
                say "  $_" for @lines.head; #[0..^10];
                #say "  $_" for @lines[0..^10];
            }
            elsif $v ~~ Str {
                my $s = $v.comb[0..^50].join;
                say "   $s";
            }
            else {
                say "WARNING: Unknown type for value for key $k";
            }
        }
        elsif $k eq "security" {
            say "  key $k";
            if $v ~~ Hash {
                my %h2 = %($v);
            }
            elsif $v ~~ List {
                my @lines = @($v);
            }
            elsif $v ~~ Str {
                my $s = $v.comb[0..^50].join;
                say "   $s";
            }
            else {
                say "WARNING: Unknown type for value for key $k";
            }
        }
    }

    =begin comment
    #say $jstr;
    say %h.raku;
    my $pretty = to-json $jkstr;
    say $pretty;
    =end comment

    exit;

    # my $res = query :$debug;
    # say $res;
}
