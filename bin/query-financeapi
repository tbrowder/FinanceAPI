#!/usr/bin/env raku

use JSON::Fast <pretty sorted-keys>;
use JSON::Path;

use FinanceAPI;
use FinanceAPI::Vars;

my $apif = "t/api/yh-finance-api-specification.json";

my $debug     = 0;
my @symbols;
my @modules;
my $summary   = 0;
my $daily     = 0;
my $increment = 0;
my $range     = 0;
my $lang      = 0;
my $region    = 0;
if not @*ARGS {
    print qq:to/HERE/;
    Usage: {$*PROGRAM.basename} <mode> <options...> [debug]

    With <mode> and <options...>, queries the FinanceAPI for
    results to be processed.

    Modes:
       da[ily]     - shows daily prices for a security
       di[vidends] - shows dividends for a security
       su[mmary]   - cycles 10 modules at a time to display data for a security

    Options:
       sy[mbols]=s1,s2,..,sN # default is JABAX
       mo[dules]=m1,m2,..,sN # see README
       increment=X
       range=X
       lang=X
       region=X

    HERE
    exit;
}

for @*ARGS {
    when /^ :i d/ {
        ++$debug;
    }
    when /^ :i sy[m|mb|mbo|mbol|mbols]? '=' (\S+) / {
        # a list of security symbols
        my $s = ~$0;
        $s ~~ s:g/','/ /;
        @symbols = $s.words;
    }
    when /^ :i mo[d|du|dul|dule|dules]? '=' (\S+) / {
        # a list of modules for api use
        my $s = ~$0;
        $s ~~ s:g/','/ /;
        @modules = $s.words;
    }
    when /^ :i su[m|mm|mma|mmar|mmary]? (\S+) / {
        ++$summary;
    }
    default {
        say qq:to/HERE/;
        FATAL: Unknown arg '$_', exiting...";
        HERE
    }
}

if @symbols {
    say "found \@symbols..." if $debug;
    while @symbols {
    }
}


